<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on tangzixiang&#39;s blog</title>
    <link>https://tangzixiang.github.io/tags/hugo/</link>
    <description>Recent content in Hugo on tangzixiang&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 15 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tangzixiang.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 Hugo 发布文章</title>
      <link>https://tangzixiang.github.io/posts/%E4%BD%BF%E7%94%A8-hugo-%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tangzixiang.github.io/posts/%E4%BD%BF%E7%94%A8-hugo-%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</guid>
      <description>摘要  添加一篇文章 本地开启草稿箱视图 解除文章草稿状态 发布草稿文章 设置文章过期时间/发布时间 发布保留过期文章及未发布文章  添加一篇文章 在上一篇文章 使用 Hugo 创建个人 Blog 中介绍了 Hugo 这个工具，以及如何使用它为自己创建一个好看的博客。这篇文章延续上一篇使用 registerforxxx.github.io 作为案例。
添加文章前我们先启动 Hugo
github.io $ hugo server 添加文章依旧是使用 new 子命令，这里我们在 posts 目录下创建一篇名为 my-first-post
github.io $ hugo new posts/my-first-post.md 创建完成后打开文章可以看到如下内容：
--- title: &amp;#34;My First Post&amp;#34; date: 2019-12-16T21:38:04+08:00 draft: true tags: - untagged --- 这是一篇 Markdown 格式的文章，文章的开头由前后 --- 包裹了一些信息，这些信息称为文章的元数据，用于说明文章的相关配套信息，其中包括但不限于标题、日期、标签、是否草稿等。
这里对上述的元数据做解释如下：
 title: 文章的标题 date: 文章的日期 draft: 文章是否草稿，草稿内容不会被发布 tags: 为当前文章打标签，不同文章可以使用相同的标签  文章内容需要写在元数据的后面：
--- title: &amp;#34;My First Post&amp;#34; date: 2019-12-16T21:38:04+08:00 draft: true tags: - untagged --- Quisque velit nisi, pretium ut lacinia in, elementum id enim.</description>
    </item>
    
    <item>
      <title>使用 Hugo 创建个人 Blog</title>
      <link>https://tangzixiang.github.io/posts/%E4%BD%BF%E7%94%A8-hugo-%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA-blog/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tangzixiang.github.io/posts/%E4%BD%BF%E7%94%A8-hugo-%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA-blog/</guid>
      <description>摘要  你得先有个 GitHub 账号 Hugo 是什么？ Hugo 特色 安装 Hugo Hugo Themes Hugo 子命令 创建一个站点目录 添加主题 推送到 GitHub 上 配置 404 页面 GitHub Page 相关限制说明  你得先有个 GitHub 账号 在上一篇 如何在 GitHub 上创建 repository 中介绍了如何在 GitHub 上注册账号及个人仓库的详细步骤，如果你已有账号可以跳过此节，继续往下。
这篇文章我们延续上一章使用 registerforxxx.github.io 作为案例。
Hugo 是什么？ 引用 官方 结束的一句话
 Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again
 一句话总结：Hugo 是一个静态网站生成器 😆。</description>
    </item>
    
    <item>
      <title>如何在 GitHub 上创建 repository </title>
      <link>https://tangzixiang.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8-github-%E4%B8%8A%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tangzixiang.github.io/posts/%E5%A6%82%E4%BD%95%E5%9C%A8-github-%E4%B8%8A%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93/</guid>
      <description>摘要  创建 GitHub 账号 创建首个 repository  创建GitHub 账号 首先登录 GitHub 官网地址，见到如下界面
填入个人信息后会跳转至验证页面
验证通过后进入下个页面选择是否使用专业版或免费版
个人版及专业版除了价格不一样之外参考如下：
这里我们选择个人板块的免费版进入下个页面
这里我们选择 None 和 Create a website with GitHub Pages 然后点击 Complete 完成个人账号的注册流程,进入未验证邮箱提示页面
这里可以看到右上角已经获得一个 GitHub 默认分配的头像
创建首个 repository 上一步我们完成了个人账号的创建，在邮箱点击确认验证后会默认进入 GitHub 的创建仓库页面
这里我们以创建个人站点仓库举例，输入完成后点击 create repository 完成个人第一个仓库的创建</description>
    </item>
    
  </channel>
</rss>